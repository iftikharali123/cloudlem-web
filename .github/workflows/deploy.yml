name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/
        cp -r app deploy/
        cp -r components deploy/
        cp -r hooks deploy/
        cp -r lib deploy/
        cp -r styles deploy/
        cp package*.json deploy/
        cp next.config.mjs deploy/
        cp tsconfig.json deploy/
        cp components.json deploy/
        cp postcss.config.mjs deploy/
        tar -czf deploy.tar.gz -C deploy .

    - name: Upload deployment package
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT || 22 }}
        source: "deploy.tar.gz"
        target: "/tmp/"

    - name: Setup EC2 environment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT || 22 }}
        script: |
          # Install Node.js 18 if not already installed
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          
          # Install PM2 globally if not already installed
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi
          
          # Create app directory and logs directory
          mkdir -p /home/${{ secrets.EC2_USERNAME }}/cloudlem-app/logs
          
          # Set proper permissions
          sudo chown -R ${{ secrets.EC2_USERNAME }}:${{ secrets.EC2_USERNAME }} /home/${{ secrets.EC2_USERNAME }}/cloudlem-app

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT || 22 }}
        script: |
          # Create app directory if it doesn't exist
          mkdir -p /home/${{ secrets.EC2_USERNAME }}/cloudlem-app
          cd /home/${{ secrets.EC2_USERNAME }}/cloudlem-app
          
          # Stop existing application
          pm2 stop cloudlem-app 2>/dev/null || true
          pm2 delete cloudlem-app 2>/dev/null || true
          
          # Remove old files
          rm -rf .next public app components hooks lib styles
          rm -f package*.json next.config.mjs tsconfig.json components.json postcss.config.mjs
          
          # Extract new deployment
          tar -xzf /tmp/deploy.tar.gz
          
          # Install production dependencies
          npm ci --only=production
          
          # Start application with PM2
          pm2 start npm --name "cloudlem-app" -- start
          pm2 save
          pm2 startup
